"""
Django settings for lds project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import environ
from decouple import config

import django_heroku
# reading .env file

env = environ.Env()
environ.Env.read_env()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = env.str('SECRET_KEY')

#SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = env.str('DEBUG', default=False)

##DEBUG = config('DEBUG', default=False, cast=bool)
ALLOWED_HOSTS = ['lds-project-django.herokuapp.com', 'localhost']   

# Application definition

MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

INSTALLED_APPS = [
    'accounts.apps.AccountsConfig', 
    'rentals.apps.RentalsConfig', 
    'cars.apps.CarsConfig', 
    'pages.apps.PagesConfig', 
    'courses.apps.CoursesConfig', 
    'enrolls.apps.EnrollsConfig', 
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',  
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'mathfilters', 
    'ckeditor', 
    'ckeditor_uploader'
]

CKEDITOR_UPLOAD_PATH = "uploads/"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware', 
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'lds.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ os.path.join( BASE_DIR, 'templates')], 
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lds.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME' : env('DB_NAME'), 
        'USER' : env('DB_USER'), 
        'PASSWORD' : env('DB_PASSWORD'), 
        'HOST' : env('DB_HOST')
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'fi'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

PROJECT_PATH = os.path.dirname(os.path.abspath(__file__))

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

LANGUAGES = [
    ('ru', 'Russian'),
    ('en', 'Englsih'),
    ('fi', 'Finish'),
    ('et', 'Estonian')
]


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/staticfiles/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'lds/static')
]

""" media folder  """
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

## messages
from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.INFO: 'info',
    messages.ERROR: 'danger',
}

EMAIL_HOST = env('MAIL_SERVER_HOST')
EMAIL_PORT = env('MAIL_SERVER_PORT')
EMAIL_HOST_USER = env('MAIL_SERVER_USERNAME')
EMAIL_HOST_PASSWORD = env('MAIL_SERVER_TOKEN')
EMAIL_USE_TLS = env('MAIL_SERVER_TLS')

#ADMIN_EMAIL = env('ADMIN_EMAIL')

django_heroku.settings(locals())

ADMINS = [('Alexander', env('ADMIN_EMAIL_1')), ('Denis', env('ADMIN_EMAIL_2'))]
DEFAULT_FROM_EMAIL = env('DEFAULT_EMAIL')
